input {
  file {
    path => "/usr/share/logstash/logs/security_logs/*.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "security_logs"
    codec => "plain"
  }
}

filter {
  csv {
    separator => ","
    columns => ["Timestamp","User_ID","IP_Address","Activity_Type","Resource_Accessed","File_Name","Action","Login_Attempts","File_Size","Anomaly_Type","Label"]
    skip_header => false
    autodetect_column_names => true
    convert => {
      "User_ID" => "integer"
      "File_Size" => "float"
      "Login_Attempts" => "integer"
    }
  }

  date {
    match => ["Timestamp", "yyyy-MM-dd HH:mm:ss.SSSSSS"]
    target => "@timestamp"
    timezone => "UTC"
  }

  mutate {
    remove_field => ["Timestamp", "message", "host", "path", "@version"]
    gsub => [
      "File_Name", "^$", "N/A",
      "Action", "^$", "N/A",
      "Resource_Accessed", "//+", "/"
    ]
  }

  # Walidacja i domyślne wartości
  if [IP_Address] !~ /^[0-9]{1,3}(\.[0-9]{1,3}){3}$/ {
    mutate { replace => { "IP_Address" => "0.0.0.0" } }
  }

  if ![Login_Attempts] or [Login_Attempts] == "" {
    mutate { replace => { "Login_Attempts" => 0 } }
  }

  if ![File_Size] or [File_Size] == "" {
    mutate { replace => { "File_Size" => 0.0 } }
  }

  # Geolokalizacja
  if [IP_Address] !~ /^(10\.|172\.(1[6-9]|2[0-9]|3[01])\.|192\.168\.|0\.0\.0\.0)/ {
    geoip {
      source => "IP_Address"
      target => "geoip"
    }
  }

  # Tagowanie zdarzeń
  if [Label] == "Suspicious" {
    mutate {
      add_tag => ["suspicious"]
      add_field => { "risk_score" => "high" }
    }
  }
  else {
    mutate {
      add_tag => ["normal"]
      add_field => { "risk_score" => "low" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "security-logs-%{+YYYY.MM.dd}"
    document_type => "_doc"
  }

  stdout {
    codec => rubydebug
  }
}